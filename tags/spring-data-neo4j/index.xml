<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>spring-data-neo4j on Jennifer Reif</title><link>https://jmhreif.com/tags/spring-data-neo4j/</link><description>Recent content in spring-data-neo4j on Jennifer Reif</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 08 Sep 2023 09:00:00 -0600</lastBuildDate><atom:link href="https://jmhreif.com/tags/spring-data-neo4j/index.xml" rel="self" type="application/rss+xml"/><item><title>Verify Connectivity: How to Check the Neo4j Connection from a Spring Boot Application</title><link>https://jmhreif.com/blog/sdn-verifyconnectivity/</link><pubDate>Fri, 08 Sep 2023 09:00:00 -0600</pubDate><guid>https://jmhreif.com/blog/sdn-verifyconnectivity/</guid><description>Photo credit I have recently been working on a self-paced learning course for Spring Data Neo4j and wanted users to be able to test the database connection. Typically, in a Spring Boot application with Spring Data, you set the database credentials as properties in the application.properties file. You can run the application with just these details, but it only fails when the database URI has improper syntax. The application does not actually test the connection to see if it is valid and successfully connects.</description></item><item><title>ServiceUnavailableException: Connection to the database terminated.</title><link>https://jmhreif.com/blog/sdn-service-unavailable-exception/</link><pubDate>Tue, 15 Aug 2023 09:00:00 -0600</pubDate><guid>https://jmhreif.com/blog/sdn-service-unavailable-exception/</guid><description>Photo credit I was working on a Spring Data Neo4j example application for a community user’s question, and I kept running into the error below when I defined bidirectional relationship in the domain classes.
2023-08-10T13:00:17.341-05:00 ERROR 98493 --- [nio-8080-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet] : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.TransientDataAccessResourceException: Server at 408637a4.databases.neo4j.io:7687 is no longer available; Error code &amp;#39;N/A&amp;#39;] with root cause org.</description></item><item><title>How to Create a Spring Boot Application to Retrieve Data from Evernote</title><link>https://jmhreif.com/blog/evernote-api-app/</link><pubDate>Tue, 01 Aug 2023 09:00:00 -0600</pubDate><guid>https://jmhreif.com/blog/evernote-api-app/</guid><description>Photo credit I recently started work on a joint project with my colleague, Jason Koo. For this project, we want to import data from second brain apps (such as Obsidian, Notion, Evernote, etc) to Neo4j. Since I use Evernote, I was tasked with getting my notes out of Evernote. In this post, I will show you how to use the Evernote API and SDK in a Spring Boot application to retrieve data from Evernote.</description></item><item><title>Spring Data Neo4j: How to update an entity</title><link>https://jmhreif.com/blog/sdn-cypher-update-entity/</link><pubDate>Thu, 01 Jun 2023 09:00:00 -0600</pubDate><guid>https://jmhreif.com/blog/sdn-cypher-update-entity/</guid><description>Photo credit As I was incorporating Kafka to my microservices project, I ran across some trouble updating an entity in Neo4j using Spring Data Neo4j.
My data set contains books, authors, book reviews, and users. Based on a new review getting entered into the system, I want to create that review, and then update the related Book entity with an incremented review count and calculate a new average rating.</description></item><item><title>NoSuchBeanDefinitionException: No matching TransactionManager bean found for qualifier 'reactiveTransactionManager'</title><link>https://jmhreif.com/blog/no-such-bean-definition-exception/</link><pubDate>Tue, 13 Dec 2022 09:00:00 -0600</pubDate><guid>https://jmhreif.com/blog/no-such-bean-definition-exception/</guid><description>Photo credit I was working on a Spring Data Neo4j microservice application to add a write method for saving a new book review to the database, when I came across the error message below.
org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named &amp;#39;reactiveTransactionManager&amp;#39; available: No matching TransactionManager bean found for qualifier &amp;#39;reactiveTransactionManager&amp;#39; - neither qualifier match nor bean name match! The stacktrace was long and ugly, and I had come across this error before…​but I could not remember how I had solved it.</description></item></channel></rss>