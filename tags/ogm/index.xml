<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ogm on Jennifer Reif</title><link>https://jmhreif.com/tags/ogm/</link><description>Recent content in ogm on Jennifer Reif</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 19 May 2025 09:00:00 -0600</lastBuildDate><atom:link href="https://jmhreif.com/tags/ogm/index.xml" rel="self" type="application/rss+xml"/><item><title>Basic OGM: Object Mapping in the Neo4j Java Driver</title><link>https://jmhreif.com/blog/2025/neo4j-java-object-mapping/</link><pubDate>Mon, 19 May 2025 09:00:00 -0600</pubDate><guid>https://jmhreif.com/blog/2025/neo4j-java-object-mapping/</guid><description>Photo credit As of the Neo4j Java Driver 5.28.5, the driver now includes a basic object mapping feature. This allows you to map Java objects to Neo4j nodes and relationships without needing to do so manually or deal with raw results.
Note: The driverâ€™s new object mapping is not a full-fledged Object Graph Mapping (OGM) solution. For a more comprehensive option, check out the Neo4j OGM library.
Code example I put together a brief example of how to use the new object mapping feature in a Maven project.</description></item></channel></rss>