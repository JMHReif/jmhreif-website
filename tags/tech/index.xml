<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>tech on Jennifer Reif</title><link>https://jmhreif.com/tags/tech/</link><description>Recent content in tech on Jennifer Reif</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 08 Aug 2018 11:00:00 -0600</lastBuildDate><atom:link href="https://jmhreif.com/tags/tech/index.xml" rel="self" type="application/rss+xml"/><item><title>How Do You Know If a Graph Database Solves the Problem?</title><link>https://jmhreif.com/blog/how-do-you-know-if-graph-database-solves-the-problem/</link><pubDate>Wed, 08 Aug 2018 11:00:00 -0600</pubDate><guid>https://jmhreif.com/blog/how-do-you-know-if-graph-database-solves-the-problem/</guid><description>One of the greatest questions to consistently badger a developer is “what technology should I use?”. The analysis from days of thought and input determines which option(s) (from an increasingly growing number) best suits the need, manages volume and demand, plans for long-term strategy, simplifies/reduces support, and gets approved by colleagues and management.
This may sound even simpler than it sometimes can be in real life. The decision’s complexity is often compounded by how much buy-in is needed, and the current constraints of existing technology and developer knowledge.</description></item></channel></rss>