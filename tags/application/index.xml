<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>application on Jennifer Reif</title><link>https://jmhreif.com/tags/application/</link><description>Recent content in application on Jennifer Reif</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 17 Jan 2025 09:00:00 -0600</lastBuildDate><atom:link href="https://jmhreif.com/tags/application/index.xml" rel="self" type="application/rss+xml"/><item><title>Spring Data Neo4j: How to update an entity, Part 2</title><link>https://jmhreif.com/blog/2025/sdn-update-methods/</link><pubDate>Fri, 17 Jan 2025 09:00:00 -0600</pubDate><guid>https://jmhreif.com/blog/2025/sdn-update-methods/</guid><description>Photo credit After working on a new online Spring Data Neo4j course, I learned a couple more things about updating an entity. The course required a different set of scenarios than outlined in my previous SDN update blog post, so I wanted to cover those scenarios, as well.
Spring save() method First up is the out-of-the-box save() method that is provided by Spring as a default. This method takes an input of the entity object you want to save to the database.</description></item></channel></rss>